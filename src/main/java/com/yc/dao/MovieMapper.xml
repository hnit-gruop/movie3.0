<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yc.dao.MovieMapper">



	<select id="listMovie" resultMap="rm">
		SELECT
		a.movie_id movie_id,a.name name,a.duration duration,
		image
		FROM
		movie a
		LEFT JOIN movie_image b ON a.movie_id = b.movie_id
		WHERE
		b.type = 'cover_type'
		AND a.movie_id IN (
		SELECT DISTINCT
		movie_id
		FROM
		`schedule`
		WHERE
		hall_id IN (
		SELECT
		hall_id
		FROM
		hall
		WHERE
		cinema_id = #{cinemaId}
		)
		)

	</select>





	<!-- 电影筛选 -->
	<select id="filter" resultMap="rm">
		SELECT a.movie_id,a.`name`
		name,d.image FROM movie a LEFT JOIN
		movie_type b ON a.movie_id =
		b.movie_id LEFT JOIN score c ON a.movie_id
		= c.movie_id LEFT JOIN
		movie_image d ON a.movie_id = d.movie_id
		<where>
			d.type = 'cover_type'
			<if test="catId!=0">
				and b.type_id = #{catId}
			</if>
			<!-- 字符串值比较使用 内双外单 -->
			<if test='region!="0"'>
				and region = #{region}
			</if>
			<if test="yearId!=0">
				<if test="yearId==1">
					and YEAR(release_time) <![CDATA[>]]>
					2018
				</if>
				<if test="yearId==2">
					and YEAR(release_time) <![CDATA[<]]>
					2012
				</if>
				<if test="yearId>2">
					and YEAR(release_time) = #{yearId}
				</if>
			</if>
			<if test="selectType==1">
				and a.`status` = 'showing'
			</if>
			<if test="selectType==2">
				and a.`status` = 'upcoming'
			</if>
			<if test="selectType==3">
				and a.`status` = 'typical'
			</if>
		</where>

		<if test="order==1">
			ORDER BY c.sum_people DESC
		</if>

		<if test="order==2">
			ORDER BY release_time DESC
		</if>

		<if test="order==3">
			ORDER BY c.sum_score/c.sum_people DESC
		</if>
	</select>


	<!-- 查询地区 -->
	<select id="listRegion" resultType="com.yc.bean.Movie">
		select movie_id as
		movieId,region from movie
	</select>

	<resultMap type="com.yc.bean.Movie" id="rm3">
		<id column="movie_id" property="movieId" />
		<collection property="listActor" ofType="com.yc.bean.Actor">
			<id property="actorId" column="actor_id" />
			<result property="aname" column="aname" />
			<result property="pic" column="pic" />
			<result property="position" column="position" />
		</collection>
	</resultMap>

	<select id="listActor" resultMap="rm3">
		SELECT * FROM movie a LEFT JOIN
		movie_actor b ON a.movie_id = b.movie_id LEFT JOIN actor c ON
		b.actor_id = c.actor_id WHERE a.movie_id = #{movie_id}
	</select>

	<!-- 关联所有分类 -->
	<resultMap type="com.yc.bean.Movie" id="rm2">
		<id column="movie_id" property="movieId" />
		<collection property="listType" ofType="com.yc.bean.Type">
			<id property="typeId" column="type_id" />
			<result property="name" column="name" />
		</collection>
	</resultMap>

	<select id="getTypeList" resultMap="rm2">
		SELECT
		a.movie_id,b.type_id,b.movie_id,c.type_id,c.`name` from movie a LEFT
		JOIN movie_type b on a.movie_id = b.movie_id LEFT JOIN type c ON
		b.type_id = c.type_id WHERE a.movie_id = #{movieId}
	</select>

	<!--关联电影封面 -->
	<resultMap type="com.yc.bean.Movie" id="rm">
		<id column="movie_id" property="movieId" />
		<result column="name" property="name" />
		<result column="duration" property="duration"/>
		<association property="movieImage"
			javaType="com.yc.bean.MovieImage">
			<id column="id" property="id" />
			<result column="image" property="image" />
		</association>
	</resultMap>

	<!-- 正在播放 -->
	<select id="listShowing" resultMap="rm">
		SELECT
		a.movie_id,a.`name`,b.image from movie a LEFT JOIN movie_image b ON
		a.movie_id = b.movie_id WHERE status = 'showing'
		and b.type =
		'cover_type'
		LIMIT #{start},#{offset}
	</select>

	<!-- 即将上映 -->
	<select id="listUpComing" resultMap="rm">
		SELECT
		a.movie_id,a.`name`,b.image from movie a LEFT JOIN movie_image b ON
		a.movie_id = b.movie_id WHERE status = 'upcoming'
		and b.type =
		'cover_type'
		LIMIT #{start},#{offset}
	</select>



	<resultMap id="BaseResultMap" type="com.yc.bean.Movie">
		<id column="movie_id" jdbcType="INTEGER" property="movieId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="duration" jdbcType="INTEGER"
			property="duration" />
		<result column="release_time" jdbcType="DATE"
			property="releaseTime" />
		<result column="foreign_name" jdbcType="VARCHAR"
			property="foreignName" />
		<result column="region" jdbcType="VARCHAR" property="region" />
		<result column="language" jdbcType="VARCHAR"
			property="language" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="status" jdbcType="VARCHAR" property="status" />
	</resultMap>


	<resultMap id="BaseResultMap1" type="com.yc.bean.Movie">
		<id column="movie_id" jdbcType="INTEGER" property="movieId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="duration" jdbcType="INTEGER"
			property="duration" />
		<result column="release_time" jdbcType="DATE"
			property="releaseTime" />
		<result column="foreign_name" jdbcType="VARCHAR"
			property="foreignName" />
		<result column="region" jdbcType="VARCHAR" property="region" />
		<result column="language" jdbcType="VARCHAR"
			property="language" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<collection property="movieImage" column="movie_id"
			javaType="com.yc.bean.MovieImage" autoMapping="true">
			<id column="id" property="id" />
		</collection>
	</resultMap>


	<!-- 加了一个BaseResultMap1 -->
	<select id="selectAll" resultMap="BaseResultMap1">
		SELECT a.*,TYPE,image,sum_score,sum_people,sum_score/sum_people score
		FROM movie a LEFT JOIN movie_image b ON a.movie_id=b.movie_id
		and
		type='cover_type'
		LEFT JOIN score c ON a.movie_id=c.movie_id
		<if test="example.orderByClause != null">
			order by ${example.orderByClause}
		</if>
		<if test="limit!=-1">
			limit #{limit}
		</if>
	</select>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>


	<sql id="Base_Column_List">
		movie_id, name, duration, release_time, foreign_name,
		region, language,
		description,
		status
	</sql>

	<select id="selectByExample"
		parameterType="com.yc.bean.MovieExample" resultMap="BaseResultMap">
		SELECT
		<if test="distinct">
			distinct
		</if>

		<include refid="Base_Column_List" />
		from movie


		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>


	<select id="selectByName"
		parameterType="com.yc.bean.MovieExample" resultMap="BaseResultMap1">
		SELECT
		a.*,TYPE,image,sum_score,sum_people,sum_score/sum_people score
		FROM movie a LEFT JOIN movie_image b ON a.movie_id=b.movie_id
		and
		type='cover_type'
		LEFT JOIN score c ON a.movie_id=c.movie_id
		<if test="kw1!=null">
			where name like #{kw1}
		</if>
		union
		SELECT
		a.*,TYPE,image,sum_score,sum_people,sum_score/sum_people
		score
		FROM movie a LEFT JOIN movie_image b ON a.movie_id=b.movie_id
		and
		type='cover_type'
		LEFT JOIN score c ON a.movie_id=c.movie_id
		<if test="kw2!=null">
			where foreign_name like #{kw2}
		</if>
		<if test="example.orderByClause != null">
			order by ${example.orderByClause}
		</if>
	</select>




	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from movie
		where movie_id = #{movieId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from movie
		where movie_id =
		#{movieId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.yc.bean.MovieExample">
		delete from movie
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.yc.bean.Movie">
		insert into movie (movie_id,
		name, duration,
		release_time, foreign_name, region,
		language,
		description, status
		)
		values (#{movieId,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{duration,jdbcType=INTEGER},
		#{releaseTime,jdbcType=DATE}, #{foreignName,jdbcType=VARCHAR},
		#{region,jdbcType=VARCHAR},
		#{language,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.yc.bean.Movie">
		insert into movie
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="movieId != null">
				movie_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="duration != null">
				duration,
			</if>
			<if test="releaseTime != null">
				release_time,
			</if>
			<if test="foreignName != null">
				foreign_name,
			</if>
			<if test="region != null">
				region,
			</if>
			<if test="language != null">
				language,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="movieId != null">
				#{movieId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="duration != null">
				#{duration,jdbcType=INTEGER},
			</if>
			<if test="releaseTime != null">
				#{releaseTime,jdbcType=DATE},
			</if>
			<if test="foreignName != null">
				#{foreignName,jdbcType=VARCHAR},
			</if>
			<if test="region != null">
				#{region,jdbcType=VARCHAR},
			</if>
			<if test="language != null">
				#{language,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.yc.bean.MovieExample" resultType="java.lang.Long">
		select count(*) from movie
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update movie
		<set>
			<if test="record.movieId != null">
				movie_id = #{record.movieId,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.duration != null">
				duration = #{record.duration,jdbcType=INTEGER},
			</if>
			<if test="record.releaseTime != null">
				release_time = #{record.releaseTime,jdbcType=DATE},
			</if>
			<if test="record.foreignName != null">
				foreign_name = #{record.foreignName,jdbcType=VARCHAR},
			</if>
			<if test="record.region != null">
				region = #{record.region,jdbcType=VARCHAR},
			</if>
			<if test="record.language != null">
				language = #{record.language,jdbcType=VARCHAR},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update movie
		set movie_id = #{record.movieId,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		duration =
		#{record.duration,jdbcType=INTEGER},
		release_time =
		#{record.releaseTime,jdbcType=DATE},
		foreign_name =
		#{record.foreignName,jdbcType=VARCHAR},
		region =
		#{record.region,jdbcType=VARCHAR},
		language =
		#{record.language,jdbcType=VARCHAR},
		description =
		#{record.description,jdbcType=VARCHAR},
		status =
		#{record.status,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.yc.bean.Movie">
		update movie
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="duration != null">
				duration = #{duration,jdbcType=INTEGER},
			</if>
			<if test="releaseTime != null">
				release_time = #{releaseTime,jdbcType=DATE},
			</if>
			<if test="foreignName != null">
				foreign_name = #{foreignName,jdbcType=VARCHAR},
			</if>
			<if test="region != null">
				region = #{region,jdbcType=VARCHAR},
			</if>
			<if test="language != null">
				language = #{language,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
		</set>
		where movie_id = #{movieId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.yc.bean.Movie">
		update movie
		set name = #{name,jdbcType=VARCHAR},
		duration = #{duration,jdbcType=INTEGER},
		release_time =
		#{releaseTime,jdbcType=DATE},
		foreign_name =
		#{foreignName,jdbcType=VARCHAR},
		region = #{region,jdbcType=VARCHAR},
		language = #{language,jdbcType=VARCHAR},
		description =
		#{description,jdbcType=VARCHAR},
		status = #{status,jdbcType=VARCHAR}
		where movie_id = #{movieId,jdbcType=INTEGER}
	</update>
</mapper>